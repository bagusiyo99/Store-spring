spring.application.name=storespring

#server.servlet.context-path=/api

spring.datasource.url=jdbc:postgresql://localhost:5432/verceldb
spring.datasource.username=postgres
spring.datasource.password=12345
spring.datasource.driver-class-name=org.postgresql.Driver


#JPA/Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration



#Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=contoh@gmail.com
spring.mail.password=contoh
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


##JWT
#
#jwt.auth.app=authapp
#jwt.auth.secret_key=${JWT_KEY}
#jwt.auth.expires_in=3600
#
## Google SignIn
#spring.security.oauth2.client.registration.google.client-id=${GOOGLE_OAUTH2_CLIENT_ID}
#spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_OAUTH2_CLIENT_SECRET}
#spring.security.oauth2.client.registration.google.scope=profile, email
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.google.client-name=Google
#
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#
#
##Payment Gateway
#stripe.secret=${STRIPE_SECRET}
#
##FileUpload
#FILE_ZONE=${FILE_ZONE}
#FILE_UPLOAD_API_KEY=${CDN_KEY}
#FILE_UPLOAD_HOST_URL=${CDN_HOST}


